<?php declare(strict_types = 1);

use Drupal\paragraphs\Entity\Paragraph;

/**
 * @file
 * Functions to support theming in the yucon theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function yucon_preprocess_html(array &$variables): void {

}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function yucon_preprocess_page(array &$variables): void {

}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function yucon_preprocess_paragraph(array &$variables): void {
  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $variables['language'] = $language;
}

/**
 * Implements hook_preprocess_menu().
 */
function yucon_preprocess_menu(&$variables, $hook) {
  if ($hook == 'menu__main') { // We're doing that for main menu.
    // Get the current path.
    $current_path = \Drupal::request()->getRequestUri();
    $items = $variables['items'];
    foreach ($items as $key => $item) {
      // If path is current_path, set active to li.
      if ($item['url']->toString() == $current_path) {
        // Add active link.
        $variables['items'][$key]['attributes']['class'] = 'active';
      }
    }
  }
}

  /**
 * Implements hook_preprocess_menu().
 */
function yucon_preprocess_breadcrumb(&$variables){
  $node = \Drupal::routeMatch()->getParameter('node');
  $current_path = \Drupal::service('path.current')->getPath();
  $result = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);
  $crumbs = explode("/", $result);
  if($node){
    $variables['current_title'] = $node->getTitle();
    $variables['crumbs'] = $crumbs;
  }
}

function yucon_preprocess_links__language_block(&$variables){
  if(isset($variables['links']['en'])) {
    $variables['links']['en']['link']['#title'] = 'EN';
  }
  if(isset($variables['links']['de'])) {
    $variables['links']['de']['link']['#title'] = 'DE';
  }
}

/**
 * Implements hook_page_attachments_alter().
 */
function yucon_page_attachments_alter(array &$attachments) {

  foreach ($attachments['#attached']['library'] as $key => $library) {
    // Looks pretty ugly afterwards.
    if ($library == 'claro/global-styling') {
      unset($attachments['#attached']['library'][$key]);
    }
  }
}

function yucon_preprocess_paragraph__content_slider(&$variables) {
  $content_slider_para = $variables['paragraph'];
  $field_slides = $content_slider_para->field_slides->getValue();
  foreach( $field_slides as $slide) {
    $tid = $slide['target_id'];
    $slide_para = Paragraph::load($tid);
    $variables['slides'][] = array(
      'heading' => $slide_para->field_heading->value,
      'summary' => $slide_para->field_summary->value,
      'link' => $slide_para->field_link->value,
    );
  }  // $loaded_slide = Paragraph::load($tid);
}